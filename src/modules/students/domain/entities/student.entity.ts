/**
 * Student Entity
 *
 * Represents a student within a class.
 * Contains student personal information and class association.
 *
 * @module StudentEntities
 * @students Entity
 */

/**
 * Entity representing a student
 *
 * A student belongs to a specific class and has personal information
 * such as name, email, and registration number.
 *
 * @class Student
 * @students Model
 */
export class Student {
  /**
   * Unique identifier for the student
   * Generated by the database when the student is created
   *
   * @students Property
   */
  id?: string;

  /**
   * Full name of the student
   *
   * @students Property
   */
  name: string;

  /**
   * Email address of the student (optional)
   *
   * @students Property
   */
  email?: string;

  /**
   * Registration number/identifier of the student within the institution
   * Often used as a unique identifier in academic systems
   *
   * @students Property
   */
  registration: string;

  /**
   * ID of the class this student belongs to
   * References a Class entity
   *
   * @students Property
   */
  classId: string;

  /**
   * Date when the student was created
   * Auto-generated by the database
   *
   * @students Property
   */
  createdAt?: Date;

  /**
   * Date when the student was last updated
   * Auto-generated by the database
   *
   * @students Property
   */
  updatedAt?: Date;

  /**
   * Creates a new Student entity
   *
   * @param {Object} props - Student properties excluding createdAt and updatedAt
   * @param {string} [props.id] - Optional student ID
   * @param {string} props.name - Student name
   * @param {string} [props.email] - Optional student email
   * @param {string} props.registration - Student registration number
   * @param {string} props.classId - ID of the class the student belongs to
   *
   * @students Constructor
   */
  constructor(props: Omit<Student, 'createdAt' | 'updatedAt'>) {
    Object.assign(this, props);
  }
}
